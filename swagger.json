{
  "swagger": "2.0",
  "info": {
    "description": "To-do app using Node Js.",
    "version": "1.0.0",
    "title": "To-do list app",
    "contact": {
      "email": "nagasuruthika@gmail.com"
    }
  },
  "host": "editor.swagger.io",
  "basePath": "/api",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/todo": {
      "post": {
        "tags": [
          "todo"
        ],
        "summary": "Create a new To-do task",
        "description": "Create a new To-do",
        "operationId": "createTodo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New To-do task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "todo"
        ],
        "summary": "List To-do's",
        "description": "Fetching To-do list",
        "operationId": "listTodo",
        "responses": {
          "200": {
            "description": "List To-do successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Todo"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/todo/{id}": {
      "get": {
        "tags": [
          "todo"
        ],
        "summary": "Find todo by ID",
        "description": "Returns a single todo",
        "operationId": "getTodoById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of todo to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Todo not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "todo"
        ],
        "summary": "Update an existing To-do",
        "description": "Update the to-do",
        "operationId": "updateTodo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of todo to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "todo"
        ],
        "summary": "Deletes a To-do",
        "description": "",
        "operationId": "deleteTodo",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Title"
          },
          "404": {
            "description": "To-do not found"
          }
        },
        "security": [
          {
            "todo_auth": [
              "write:todo",
              "read:todo"
            ]
          }
        ]
      }
    },
    "/todo/tag": {
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "Create a new Tag",
        "description": "Create a new Tag",
        "operationId": "createTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New To-do task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/todo/tag{name}": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "List all Tags",
        "description": "Fetching Taglist",
        "operationId": "listTag",
        "responses": {
          "200": {
            "description": "List To-do successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes a User",
        "description": "",
        "operationId": "deleteUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid User"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Important"
        }
      }
    },
    "Todo": {
      "type": "object",
      "required": [
        "title",
        "message"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "example": "Work"
        },
        "description": {
          "type": "string",
          "example": "Submit Expenses"
        },
        "due_at": {
          "type": "string",
          "format": "dateTime"
        },
        "created_at": {
          "type": "string",
          "format": "dateTime"
        },
        "updated_at": {
          "type": "string",
          "format": "date"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      }
    }
  }
}